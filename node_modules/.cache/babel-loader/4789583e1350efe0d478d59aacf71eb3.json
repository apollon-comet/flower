{"ast":null,"code":"var _jsxFileName = \"D:\\\\Developing\\\\frontend\\\\React\\\\Devconnector\\\\client\\\\src\\\\components\\\\routing\\\\PrivateRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      isAuthenticated,\n      loading\n    }\n  } = _ref;\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 23\n  }, this);\n  if (isAuthenticated) return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n_c = PrivateRoute;\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","PropTypes","connect","Spinner","jsxDEV","_jsxDEV","PrivateRoute","_ref","component","Component","auth","isAuthenticated","loading","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","propTypes","object","isRequired","mapStateToProps","state","$RefreshReg$"],"sources":["D:/Developing/frontend/React/Devconnector/client/src/components/routing/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading }\n}) => {\n  if (loading) return <Spinner />;\n  if (isAuthenticated) return <Component />;\n\n  return <Navigate to=\"/login\" />;\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGC,IAAA,IAGf;EAAA,IAHgB;IACpBC,SAAS,EAAEC,SAAS;IACpBC,IAAI,EAAE;MAAEC,eAAe;MAAEC;IAAQ;EACnC,CAAC,GAAAL,IAAA;EACC,IAAIK,OAAO,EAAE,oBAAOP,OAAA,CAACF,OAAO;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC/B,IAAIL,eAAe,EAAE,oBAAON,OAAA,CAACI,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAEzC,oBAAOX,OAAA,CAACL,QAAQ;IAACiB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACE,EAAA,GARIZ,YAAY;AAUlBA,YAAY,CAACa,SAAS,GAAG;EACvBT,IAAI,EAAET,SAAS,CAACmB,MAAM,CAACC;AACzB,CAAC;AAED,MAAMC,eAAe,GAAIC,KAAK,KAAM;EAClCb,IAAI,EAAEa,KAAK,CAACb;AACd,CAAC,CAAC;AAEF,eAAeR,OAAO,CAACoB,eAAe,CAAC,CAAChB,YAAY,CAAC;AAAC,IAAAY,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module"}