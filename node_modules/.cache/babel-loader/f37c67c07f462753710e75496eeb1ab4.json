{"ast":null,"code":"var _jsxFileName = \"D:\\\\Developing\\\\React\\\\devconnector_2.0-master\\\\client\\\\src\\\\components\\\\profile\\\\ProfileAbout.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileAbout = _ref => {\n  let {\n    profile: {\n      bio,\n      skills,\n      user: {\n        name\n      }\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-about bg-light p-2\",\n    children: [bio && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-primary\",\n        children: [name.trim().split(' ')[0], \"s Bio\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary\",\n      children: \"Skill Set\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"skills\",\n      children: skills.map((skill, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), \" \", skill]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n_c = ProfileAbout;\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\nexport default ProfileAbout;\nvar _c;\n$RefreshReg$(_c, \"ProfileAbout\");","map":{"version":3,"names":["React","Fragment","PropTypes","jsxDEV","_jsxDEV","ProfileAbout","_ref","profile","bio","skills","user","name","className","children","trim","split","fileName","_jsxFileName","lineNumber","columnNumber","map","skill","index","_c","propTypes","object","isRequired","$RefreshReg$"],"sources":["D:/Developing/React/devconnector_2.0-master/client/src/components/profile/ProfileAbout.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name }\n  }\n}) => (\n  <div className='profile-about bg-light p-2'>\n    {bio && (\n      <Fragment>\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\n        <p>{bio}</p>\n        <div className='line' />\n      </Fragment>\n    )}\n    <h2 className='text-primary'>Skill Set</h2>\n    <div className='skills'>\n      {skills.map((skill, index) => (\n        <div key={index} className='p-1'>\n          <i className='fas fa-check' /> {skill}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,GAAGC,IAAA;EAAA,IAAC;IACpBC,OAAO,EAAE;MACPC,GAAG;MACHC,MAAM;MACNC,IAAI,EAAE;QAAEC;MAAK;IACf;EACF,CAAC,GAAAL,IAAA;EAAA,oBACCF,OAAA;IAAKQ,SAAS,EAAC,4BAA4B;IAAAC,QAAA,GACxCL,GAAG,iBACFJ,OAAA,CAACH,QAAQ;MAAAY,QAAA,gBACPT,OAAA;QAAIQ,SAAS,EAAC,cAAc;QAAAC,QAAA,GAAEF,IAAI,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,OAAK;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClEf,OAAA;QAAAS,QAAA,EAAIL;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACZf,OAAA;QAAKQ,SAAS,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CACX,eACDf,OAAA;MAAIQ,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Cf,OAAA;MAAKQ,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBJ,MAAM,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBlB,OAAA;QAAiBQ,SAAS,EAAC,KAAK;QAAAC,QAAA,gBAC9BT,OAAA;UAAGQ,SAAS,EAAC;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,EAACE,KAAK;MAAA,GAD7BC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAAA,CACP;AAACI,EAAA,GAxBIlB,YAAY;AA0BlBA,YAAY,CAACmB,SAAS,GAAG;EACvBjB,OAAO,EAAEL,SAAS,CAACuB,MAAM,CAACC;AAC5B,CAAC;AAED,eAAerB,YAAY;AAAC,IAAAkB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module"}